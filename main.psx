.psx
.create "main.bin", 0x80010000


.org 0x80010000
.align 4
j main
nop

; SINE TABLE
.align 2
tbl_sine:
.halfword 0x0000 ; 0x00
.halfword 0x0064 ; 0x01
.halfword 0x00C8 ; 0x02
.halfword 0x012D ; 0x03
.halfword 0x0191 ; 0x04
.halfword 0x01F5 ; 0x05
.halfword 0x0259 ; 0x06
.halfword 0x02BC ; 0x07
.halfword 0x031F ; 0x08
.halfword 0x0381 ; 0x09
.halfword 0x03E3 ; 0x0A
.halfword 0x0444 ; 0x0B
.halfword 0x04A5 ; 0x0C
.halfword 0x0504 ; 0x0D
.halfword 0x0563 ; 0x0E
.halfword 0x05C2 ; 0x0F
.halfword 0x061F ; 0x10
.halfword 0x067B ; 0x11
.halfword 0x06D7 ; 0x12
.halfword 0x0731 ; 0x13
.halfword 0x078A ; 0x14
.halfword 0x07E2 ; 0x15
.halfword 0x0839 ; 0x16
.halfword 0x088F ; 0x17
.halfword 0x08E3 ; 0x18
.halfword 0x0936 ; 0x19
.halfword 0x0987 ; 0x1A
.halfword 0x09D7 ; 0x1B
.halfword 0x0A26 ; 0x1C
.halfword 0x0A73 ; 0x1D
.halfword 0x0ABE ; 0x1E
.halfword 0x0B08 ; 0x1F
.halfword 0x0B50 ; 0x20
.halfword 0x0B96 ; 0x21
.halfword 0x0BDA ; 0x22
.halfword 0x0C1D ; 0x23
.halfword 0x0C5E ; 0x24
.halfword 0x0C9D ; 0x25
.halfword 0x0CD9 ; 0x26
.halfword 0x0D14 ; 0x27
.halfword 0x0D4D ; 0x28
.halfword 0x0D84 ; 0x29
.halfword 0x0DB9 ; 0x2A
.halfword 0x0DEB ; 0x2B
.halfword 0x0E1C ; 0x2C
.halfword 0x0E4A ; 0x2D
.halfword 0x0E76 ; 0x2E
.halfword 0x0EA0 ; 0x2F
.halfword 0x0EC8 ; 0x30
.halfword 0x0EED ; 0x31
.halfword 0x0F10 ; 0x32
.halfword 0x0F31 ; 0x33
.halfword 0x0F4F ; 0x34
.halfword 0x0F6B ; 0x35
.halfword 0x0F85 ; 0x36
.halfword 0x0F9C ; 0x37
.halfword 0x0FB1 ; 0x38
.halfword 0x0FC3 ; 0x39
.halfword 0x0FD3 ; 0x3A
.halfword 0x0FE1 ; 0x3B
.halfword 0x0FEC ; 0x3C
.halfword 0x0FF4 ; 0x3D
.halfword 0x0FFB ; 0x3E
.halfword 0x0FFE ; 0x3F
.halfword 0x1000 ; 0x40
.halfword 0x0FFE ; 0x41
.halfword 0x0FFB ; 0x42
.halfword 0x0FF4 ; 0x43
.halfword 0x0FEC ; 0x44
.halfword 0x0FE1 ; 0x45
.halfword 0x0FD3 ; 0x46
.halfword 0x0FC3 ; 0x47
.halfword 0x0FB1 ; 0x48
.halfword 0x0F9C ; 0x49
.halfword 0x0F85 ; 0x4A
.halfword 0x0F6B ; 0x4B
.halfword 0x0F4F ; 0x4C
.halfword 0x0F31 ; 0x4D
.halfword 0x0F10 ; 0x4E
.halfword 0x0EED ; 0x4F
.halfword 0x0EC8 ; 0x50
.halfword 0x0EA0 ; 0x51
.halfword 0x0E76 ; 0x52
.halfword 0x0E4A ; 0x53
.halfword 0x0E1C ; 0x54
.halfword 0x0DEB ; 0x55
.halfword 0x0DB9 ; 0x56
.halfword 0x0D84 ; 0x57
.halfword 0x0D4D ; 0x58
.halfword 0x0D14 ; 0x59
.halfword 0x0CD9 ; 0x5A
.halfword 0x0C9D ; 0x5B
.halfword 0x0C5E ; 0x5C
.halfword 0x0C1D ; 0x5D
.halfword 0x0BDA ; 0x5E
.halfword 0x0B96 ; 0x5F
.halfword 0x0B50 ; 0x60
.halfword 0x0B08 ; 0x61
.halfword 0x0ABE ; 0x62
.halfword 0x0A73 ; 0x63
.halfword 0x0A26 ; 0x64
.halfword 0x09D7 ; 0x65
.halfword 0x0987 ; 0x66
.halfword 0x0936 ; 0x67
.halfword 0x08E3 ; 0x68
.halfword 0x088F ; 0x69
.halfword 0x0839 ; 0x6A
.halfword 0x07E2 ; 0x6B
.halfword 0x078A ; 0x6C
.halfword 0x0731 ; 0x6D
.halfword 0x06D7 ; 0x6E
.halfword 0x067B ; 0x6F
.halfword 0x061F ; 0x70
.halfword 0x05C2 ; 0x71
.halfword 0x0563 ; 0x72
.halfword 0x0504 ; 0x73
.halfword 0x04A5 ; 0x74
.halfword 0x0444 ; 0x75
.halfword 0x03E3 ; 0x76
.halfword 0x0381 ; 0x77
.halfword 0x031F ; 0x78
.halfword 0x02BC ; 0x79
.halfword 0x0259 ; 0x7A
.halfword 0x01F5 ; 0x7B
.halfword 0x0191 ; 0x7C
.halfword 0x012D ; 0x7D
.halfword 0x00C8 ; 0x7E
.halfword 0x0064 ; 0x7F
.halfword 0x0000 ; 0x80
.halfword -0x0064 ; 0x81
.halfword -0x00C8 ; 0x82
.halfword -0x012D ; 0x83
.halfword -0x0191 ; 0x84
.halfword -0x01F5 ; 0x85
.halfword -0x0259 ; 0x86
.halfword -0x02BC ; 0x87
.halfword -0x031F ; 0x88
.halfword -0x0381 ; 0x89
.halfword -0x03E3 ; 0x8A
.halfword -0x0444 ; 0x8B
.halfword -0x04A5 ; 0x8C
.halfword -0x0504 ; 0x8D
.halfword -0x0563 ; 0x8E
.halfword -0x05C2 ; 0x8F
.halfword -0x061F ; 0x90
.halfword -0x067B ; 0x91
.halfword -0x06D7 ; 0x92
.halfword -0x0731 ; 0x93
.halfword -0x078A ; 0x94
.halfword -0x07E2 ; 0x95
.halfword -0x0839 ; 0x96
.halfword -0x088F ; 0x97
.halfword -0x08E3 ; 0x98
.halfword -0x0936 ; 0x99
.halfword -0x0987 ; 0x9A
.halfword -0x09D7 ; 0x9B
.halfword -0x0A26 ; 0x9C
.halfword -0x0A73 ; 0x9D
.halfword -0x0ABE ; 0x9E
.halfword -0x0B08 ; 0x9F
.halfword -0x0B50 ; 0xA0
.halfword -0x0B96 ; 0xA1
.halfword -0x0BDA ; 0xA2
.halfword -0x0C1D ; 0xA3
.halfword -0x0C5E ; 0xA4
.halfword -0x0C9D ; 0xA5
.halfword -0x0CD9 ; 0xA6
.halfword -0x0D14 ; 0xA7
.halfword -0x0D4D ; 0xA8
.halfword -0x0D84 ; 0xA9
.halfword -0x0DB9 ; 0xAA
.halfword -0x0DEB ; 0xAB
.halfword -0x0E1C ; 0xAC
.halfword -0x0E4A ; 0xAD
.halfword -0x0E76 ; 0xAE
.halfword -0x0EA0 ; 0xAF
.halfword -0x0EC8 ; 0xB0
.halfword -0x0EED ; 0xB1
.halfword -0x0F10 ; 0xB2
.halfword -0x0F31 ; 0xB3
.halfword -0x0F4F ; 0xB4
.halfword -0x0F6B ; 0xB5
.halfword -0x0F85 ; 0xB6
.halfword -0x0F9C ; 0xB7
.halfword -0x0FB1 ; 0xB8
.halfword -0x0FC3 ; 0xB9
.halfword -0x0FD3 ; 0xBA
.halfword -0x0FE1 ; 0xBB
.halfword -0x0FEC ; 0xBC
.halfword -0x0FF4 ; 0xBD
.halfword -0x0FFB ; 0xBE
.halfword -0x0FFE ; 0xBF
.halfword -0x1000 ; 0xC0
.halfword -0x0FFE ; 0xC1
.halfword -0x0FFB ; 0xC2
.halfword -0x0FF4 ; 0xC3
.halfword -0x0FEC ; 0xC4
.halfword -0x0FE1 ; 0xC5
.halfword -0x0FD3 ; 0xC6
.halfword -0x0FC3 ; 0xC7
.halfword -0x0FB1 ; 0xC8
.halfword -0x0F9C ; 0xC9
.halfword -0x0F85 ; 0xCA
.halfword -0x0F6B ; 0xCB
.halfword -0x0F4F ; 0xCC
.halfword -0x0F31 ; 0xCD
.halfword -0x0F10 ; 0xCE
.halfword -0x0EED ; 0xCF
.halfword -0x0EC8 ; 0xD0
.halfword -0x0EA0 ; 0xD1
.halfword -0x0E76 ; 0xD2
.halfword -0x0E4A ; 0xD3
.halfword -0x0E1C ; 0xD4
.halfword -0x0DEB ; 0xD5
.halfword -0x0DB9 ; 0xD6
.halfword -0x0D84 ; 0xD7
.halfword -0x0D4D ; 0xD8
.halfword -0x0D14 ; 0xD9
.halfword -0x0CD9 ; 0xDA
.halfword -0x0C9D ; 0xDB
.halfword -0x0C5E ; 0xDC
.halfword -0x0C1D ; 0xDD
.halfword -0x0BDA ; 0xDE
.halfword -0x0B96 ; 0xDF
.halfword -0x0B50 ; 0xE0
.halfword -0x0B08 ; 0xE1
.halfword -0x0ABE ; 0xE2
.halfword -0x0A73 ; 0xE3
.halfword -0x0A26 ; 0xE4
.halfword -0x09D7 ; 0xE5
.halfword -0x0987 ; 0xE6
.halfword -0x0936 ; 0xE7
.halfword -0x08E3 ; 0xE8
.halfword -0x088F ; 0xE9
.halfword -0x0839 ; 0xEA
.halfword -0x07E2 ; 0xEB
.halfword -0x078A ; 0xEC
.halfword -0x0731 ; 0xED
.halfword -0x06D7 ; 0xEE
.halfword -0x067B ; 0xEF
.halfword -0x061F ; 0xF0
.halfword -0x05C2 ; 0xF1
.halfword -0x0563 ; 0xF2
.halfword -0x0504 ; 0xF3
.halfword -0x04A5 ; 0xF4
.halfword -0x0444 ; 0xF5
.halfword -0x03E3 ; 0xF6
.halfword -0x0381 ; 0xF7
.halfword -0x031F ; 0xF8
.halfword -0x02BC ; 0xF9
.halfword -0x0259 ; 0xFA
.halfword -0x01F5 ; 0xFB
.halfword -0x0191 ; 0xFC
.halfword -0x012D ; 0xFD
.halfword -0x00C8 ; 0xFE
.halfword -0x0064 ; 0xFF

.align 4
main:
    ; Save stack pointer, frame pointer, and return address
    subiu   $sp,$sp,24
    sw      $ra,20($sp)
    sw      $fp,16($sp)
    move    $fp,$sp

    jal     init_gpu
    nop

    ; Init GTe
    mfc0    $v0, $sr
    li      $v1, 1
    sll     $v1, 30
    or      $v0, $v1
    mtc0    $v0, $sr

    ; Infinite loop
    move    $a2, $zero
    li      $a3, 0xfffff
    li      $t0, 0x00000
@@main_loop:
    ; Increase move offset
    addi    $a2, 1

    ; Clear screen
    li      $v0, 0x2
    sll     $v0, 24
    ori     $v0, 0x0 ; Black
    sw      $v0, 0x1f801810
    nop
    li      $v0, 0x0
    sw      $v0, 0x1f801810
    nop
    li      $v0, 0x01ff03ff
    sw      $v0, 0x1f801810
    nop

; c 0 s
; 0 1

    ; Load sine $t0
    la      $t7, tbl_sine
    sll     $t3, $t0, 1
    add     $s1, $t3, $t7
    lhu     $s3, 0($s1)
    nop
    srl     $t3, 1
    ;$s3 now has sine
    addi    $t3, 0x40
    andi    $t3, 0xff
    sll     $t3, 1
    add     $s1, $t3, $t7
    lhu     $s2, 0($s1)
    nop
    ; $s2 now has cos

    ; Set H value
    li      $s5, 0x30
    ctc2    $s5, $26

    ; Fill out GTE rotation matrix
    sub     $s3, $zero, $s3
    ctc2    $s2, $0
    ctc2    $s3, $1
    addi    $s4, $zero, 0x1000
    ctc2    $s4, $2
    sub     $s3, $zero, $s3
    ctc2    $s3, $3
    ctc2    $s2, $4

    ; Set our translation vector
    li      $s3, 0x80
    ctc2    $s3, $7


    ;li      $s3, 0x1000
    ;ctc2    $s3, $0
    ;;ctc2    $s3, $1
    ;ctc2    $s3, $2
    ;;ctc2    $s3, $3
    ;ctc2    $s3, $4

    ;; Perform rotation of vertex 0
    ; Load vertex
    la      $s2, d_3d_triange_v0
    lw      $s0, 0($s2)
    lhu     $s1, 4($s2)

    ; Pass to GTE
    mtc2    $s0, $0
    mtc2    $s1, $1

    ;; Perform rotation of vertex 1
    ; Load vertex
    la      $s2, d_3d_triange_v1
    lw      $s0, 0($s2)
    lhu     $s1, 4($s2)

    ; Pass to GTE
    mtc2    $s0, $2
    mtc2    $s1, $3

    ;; Perform rotation of vertex 2
    ; Load vertex
    la      $s2, d_3d_triange_v2
    lw      $s0, 0($s2)
    lhu     $s1, 4($s2)

    ; Pass to GTE
    mtc2    $s0, $4
    mtc2    $s1, $5

    ; Execute rotation
    cop2    0x280030 ; v0 * rotmatrix

    ; Store result
    mfc2    $s0, $12
    mfc2    $s1, $13
    mfc2    $s2, $14
    sw      $s0, d_triange_v0
    sw      $s1, d_triange_v1
    sw      $s2, d_triange_v2

    ;; Draw a guroud shaded triangle
    li      $v0, 0x03000000
    sw      $v0, 0x1f801814
    nop
    li      $v0, 0x30
    sll     $v0, 24
    li      $v1, 0xff
    sll     $v1, 16
    or      $v0, $v0, $v1
    andi    $a2, 0xff
    or      $v0, $a2
    sw      $v0, 0x1f801810
    nop

    ; Vertex 0 pos
    lw      $v0, d_triange_v0
    nop
    li      $a0, 100
    sll     $a0, 16
    ori     $a0, 150
    add     $a0, $a1
    add     $v0, $a0
    sw      $v0, 0x1f801810
    nop

    ; Vertex 1 colour
    li      $v0, 0x0000ff00
    sw      $v0, 0x1f801810
    nop

    ; Vertex 1 pos
    lw      $v0, d_triange_v1
    li      $a0, 100
    sll     $a0, 16
    ori     $a0, 150
    add     $a0, $a1
    add     $v0, $a0
    sw      $v0, 0x1f801810
    nop

    ; Vertex 2 colour
    li      $v0, 0x000000ff
    sw      $v0, 0x1f801810
    nop

    ; Vertex 2 pos
    lw      $v0, d_triange_v2
    li      $a0, 100
    sll     $a0, 16
    ori     $a0, 150
    add     $a0, $a1
    add     $v0, $a0
    sw      $v0, 0x1f801810
    nop

    addi    $t0, 0x1
    andi    $t0, $t0, 0xff

    ; Start timer
    li      $a3, 0xffff
    ; Spin for a bit
@@spin:
    subi    $a3, 1
    bne     $a3, $zero, @@spin
    nop

    ; Back to the start of the main loop
    j       @@main_loop
    nop

    ; Restore and return
    move    $sp,$fp
    lw      $ra,20($sp)
    lw      $fp,16($sp)
    addiu   $sp,$sp,24
    jr      $ra
    nop

; write commands to the gpu_command port
gpu_comm:
    sll     $a0, 24
    or      $a0, $a1
    sw      $a0, 0x1f801814
    jr      $ra
    nop

; write commands to the gpu_data port
gpu_data:
    sll     $a0, 24
    or      $a0, $a1
    sw      $a0, 0x1f801810
    jr      $ra
    nop

; Init the gpu so we're ready to draw
init_gpu:
    ; Save the return address
    move    $s0, $ra

    ; Reset the GPU
    li      $a0, 0
    li      $a1, 0
    jal     gpu_comm
    nop
    ; Set the horizontal start/end
    li      $a0, 6
    li      $a1, 0xc56
    sll     $a1, 12
    ori     $a1, 0x250
    jal     gpu_comm
    nop
    ; Set the vertical start/end
    li      $a0, 7
    li      $a1, 0x100
    sll     $a1, 10
    ori     $a1, 0x10
    jal     gpu_comm
    nop
    ; Set display mode
    li      $a0, 8
    li      $a1, 0x21 ; 0b0010_0001
    jal     gpu_comm
    nop
    ; Set display offset
    li      $a0, 5
    li      $a1, 0x0
    jal     gpu_comm
    nop
    ; Set draw mode
    li      $a0, 0xe1
    li      $a1, 0x200
    jal     gpu_data
    nop
    ; Set draw area
    li      $a0, 0xe3
    li      $a1, 0x0
    jal     gpu_data
    nop
    ; Set draw area
    li      $a0, 0xe4
    li      $a1, 0x3BD
    sll     $a1, 8
    ori     $a1, 0x3F
    jal     gpu_data
    nop
    ; Set draw offset
    li      $a0, 0xe5
    li      $a1, 0x0
    jal     gpu_data
    nop
    ; Set DMA to CPU->GPU
    li      $a0, 4
    li      $a1, 0x2
    jal     gpu_comm
    nop
    ; Enable the display
    li      $a0, 0x3
    li      $a1, 0x0
    jal     gpu_comm
    nop

    ; Restore the return address, and return
    move    $ra, $s0
    jr      $ra
    nop

.align 4
d_triange_v0:
.halfword 0, -50
.align 4
d_triange_v1:
.halfword 50, 50
.align 4
d_triange_v2:
.halfword -50, 50

.align 4
d_3d_triange_v0:
.halfword 0, -0x50, 0x0
.align 4
d_3d_triange_v1:
.halfword 0x50, 0x50, 0x0
.align 4
d_3d_triange_v2:
.halfword -0x50, 0x50, 0x0

.close
